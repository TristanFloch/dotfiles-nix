[global/wm]

margin-bottom = 0
margin-top = 0

include-file = ~/.config/polybar/colors.ini
include-file = ~/.config/polybar/modules.ini

[bar/main]

enable-ipc = true
monitor = ${env:MONITOR}

width = 100%
height = 36
;offset-x = 1%
;offset-y = 1%
radius = 0
fixed-center = true

; Put the bar at the bottom of the screen
bottom = true

background = ${colors.transparent}
foreground = ${colors.foreground}

border-top-size = 0
border-bottom-size = 6
border-bottom-color = ${colors.transparent}
border-left-size = 0
border-left-color = ${colors.transparent}
border-right-size = 0
border-right-color = ${colors.transparent}

padding-left = 0
padding-right = 0

module-margin-left = 0
module-margin-right = 0


; Under-/overline pixel size and argb color
; Individual values can be defined using:
;   {overline,underline}-size
;   {overline,underline}-color
; line-size = 2
; line-color = ${color.background}

include-file = ~/.config/polybar/fonts.ini

modules-left = xwindow right left date right left my-xkeyboard right left-spotify spotify right-spotify
modules-center = left i3 right
modules-right = left backlight right left pulseaudio right left memory right left cpu right left filesystem right left temperature right left battery right left

cursor-click = pointer
cursor-scroll = ns-resize

; If true, the bar will not shift its
; contents when the tray changes
tray-detached = false

tray-position = right
tray-scale = 1
tray-background = ${colors.background}

[settings]
; The throttle settings lets the eventloop swallow up til X events
; if they happen within Y millisecond after first event was received.
; This is done to prevent flood of update event.
;
; For example if 5 modules emit an update event at the same time, we really
; just care about the last one. But if we wait too long for events to swallow
; the bar would appear sluggish so we continue if timeout
; expires or limit is reached.
; throttle-output = 5
; throttle-output-for = 10

; @deprecated The setting is ignored since 3.5.0
; Time in milliseconds that the input handler will wait between processing events
; throttle-input-for = 30

; Reload upon receiving XCB_RANDR_SCREEN_CHANGE_NOTIFY events
; FIXME does not work with NixOS
; screenchange-reload = true

; Compositing operators
; @see: https://www.cairographics.org/manual/cairo-cairo-t.html#cairo-operator-t
compositing-background = source
compositing-foreground = over
compositing-overline = over
compositing-underline = over
compositing-border = over

; Define fallback values used by all module formats
format-foreground = ${colors.foreground}
format-background = ${colors.background}
; format-underline =
; format-overline =
; format-spacing =
; format-padding = 3
; format-margin =
; format-offset =

; Enables pseudo-transparency for the bar
; If set to true the bar can be transparent without a compositor.
pseudo-transparency = false
